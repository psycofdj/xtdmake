#!/bin/bash

l_rootdir=$(dirname $(dirname $(readlink -m $0)))
l_srcdir=$1
l_buildType=$2
l_dir=$(mktemp -d)
VERBOSE=""

if [ -z "${l_buildType}" ]; then
    l_buildType=Debug
fi

l_checks=(check/m1/index.html      cppcheck/m1/index.html      doc-coverage/m1/index.html
          check/m1/status.json     cppcheck/m1/status.json     doc-coverage/m1/status.json
          cloc/m1/index.html       doc-coverage/m1/data.json   cloc/m1/status.json)

if [ "${l_buildType}" == "Debug" ]; then
    l_checks+=(coverage/m1/status.json coverage/m1/index.html)
fi

cd ${l_dir}
cmake "${l_srcdir}" -DCMAKE_BUILD_TYPE=${l_buildType} -DCMAKE_PREFIX_PATH=${l_rootdir}/src
if [ $? -ne 0 ]; then
    echo "error: failed to initialize buildsystem"
    exit 1
fi

make  -j4 ${VERBOSE}
if [ $? -ne 0 ]; then
    echo "error: failed to compile"
    exit 1
fi

make reports -j4  ${VERBOSE}
if [ $? -ne 0 ]; then
    echo "error: failed to generate reports"
    exit 1
fi

for c_file in $(echo ${l_checks[@]}); do
  if [ ! -f ${l_dir}/reports/${c_file} ]; then
      echo "error : missing expected report file ${c_file}"
      exit 1
  fi
done


mkdir -p ${l_dir}/_tmp
DESTDIR=${l_dir}/_tmp make install  ${VERBOSE}
l_files=(lib/libp1m1.a lib/libp1m1.a lib/libp1m1.so.0.1.1 lib/libp1m1.so.0 lib/libp1m1.so)
for c_file in $(echo ${l_files[@]}); do
  if [ ! -f "${l_dir}/_tmp/usr/local/${c_file}" ]; then
      echo "error : missing expected install file ${c_file}"
      exit 1
  fi
done


for c_rcs in $(echo "time date revno"); do
  for c_file in $(echo ${l_files[@]}); do
    ident ${l_dir}/_tmp/usr/local/${c_file} | grep -q ${c_rcs} || {
      echo "error: cannot find '${c_rcs}' in file '${c_file}'"
      exit 1
    }
  done
done


l_bin=(bin/bin_m1)
for c_rcs in $(echo "time" "date" "revno" "user" "pwd"); do
  for c_file in $(echo ${l_bin[@]}); do
    ident ${l_dir}/_tmp/usr/local/${c_file} | grep -q ${c_rcs} || {
      echo "error: cannot find '${c_rcs}' in file '${c_file}'"
      echo "indent information:"
      ident ${l_dir}/_tmp/usr/local/${c_file}
      exit 1
    }
  done
done


# check that manual tests are correclty added
cat ${l_dir}/reports/check/m1/tests.xml | grep -q tMyTest || {
  echo "error: unable to find tMyTest in test reports"
  exit 1
}


# check check has incremental build
l_mtime1=$(stat ${l_dir}/reports/check/m1/tests.xml | grep Modify | cut -d' ' -f2-3)
touch ${l_srcdir}/m1/unit/TestCode.cc
make check -j4
l_mtime2=$(stat ${l_dir}/reports/check/m1/tests.xml | grep Modify | cut -d' ' -f2-3)
if [ "${l_mtime1}" = "${l_mtime2}" ]; then
    echo "error : check target is not incremental"
    exit 1
fi

make  clean -j4  ${VERBOSE}
if [ $? -ne 0 ]; then
    echo "error: failed to clean build tree"
    exit 1
fi


for c_file in $(echo ${l_checks[@]}); do
  if [ -f ${l_dir}/reports/m1/${c_file} ]; then
      echo "error : unexpected report file ${c_file}"
      exit 1
  fi
done





rm -rf ${l_dir}
